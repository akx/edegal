version: '2'
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend-development
    ports:
      - 8000:8000
    links:
      # - rabbitmq
      - postgres
      - memcache
    volumes:
      - .:/usr/src/app
      - edegal-media:/usr/src/app/media
    environment:
      DEBUG: 1
      DATABASE_URL: psql://edegal:secret@postgres/edegal
      # BROKER_URL: amqp://guest:guest@rabbitmq/
      CACHE_URL: memcache://memcache

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend-development
    ports:
      - 8080:8080
    links:
      - backend
    volumes:
      - .:/usr/src/app
      - edegal-node_modules:/usr/src/app/node_modules
    environment:
      NODE_ENV: development
      EDEGAL_BACKEND_URL: http://backend:8000

  # celery:
  #   build: .
  #   command: celery -A edegal2.celery_app:app worker
  #   links:
  #     - rabbitmq
  #     - postgres
  #     - memcache
  #   volumes:
  #     - .:/usr/src/app:ro
  #   environment:
  #     DEBUG: 1
  #     DATABASE_URL: psql://edegal:secret@postgres/edegal
  #     BROKER_URL: amqp://guest:guest@rabbitmq/
  #     CACHE_URL: memcache://memcache
  postgres:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: edegal
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: edegal
  # rabbitmq:
  #   image: rabbitmq
  memcache:
    image: memcached
volumes:
  postgres-data:
    driver: local
  edegal-media:
    driver: local
  edegal-node_modules:
    driver: local
